{"creationTimeStamp":"2021-09-28T07:57:50.183Z","modifiedTimeStamp":"2021-09-28T07:57:50.183Z","createdBy":"gerdaw","modifiedBy":"gerdaw","name":"Call a Flow.step","displayName":"Call a Flow.step","localDisplayName":"Call a Flow.step","properties":{},"links":[{"method":"GET","rel":"self","href":"/dataFlows/steps/5239426e-1ce9-4351-a244-57645f321b79","uri":"/dataFlows/steps/5239426e-1ce9-4351-a244-57645f321b79","type":"application/vnd.sas.data.flow.step"},{"method":"GET","rel":"alternate","href":"/dataFlows/steps/5239426e-1ce9-4351-a244-57645f321b79","uri":"/dataFlows/steps/5239426e-1ce9-4351-a244-57645f321b79","type":"application/vnd.sas.data.flow.step.summary"},{"method":"GET","rel":"up","href":"/dataFlows/steps","uri":"/dataFlows/steps","type":"application/vnd.sas.collection","itemType":"application/vnd.sas.data.flow.step.summary"},{"method":"PUT","rel":"update","href":"/dataFlows/steps/5239426e-1ce9-4351-a244-57645f321b79","uri":"/dataFlows/steps/5239426e-1ce9-4351-a244-57645f321b79","type":"application/vnd.sas.data.flow.step","responseType":"application/vnd.sas.data.flow.step"},{"method":"DELETE","rel":"delete","href":"/dataFlows/steps/5239426e-1ce9-4351-a244-57645f321b79","uri":"/dataFlows/steps/5239426e-1ce9-4351-a244-57645f321b79"},{"method":"GET","rel":"transferExport","href":"/dataFlows/steps/5239426e-1ce9-4351-a244-57645f321b79","uri":"/dataFlows/steps/5239426e-1ce9-4351-a244-57645f321b79","responseType":"application/vnd.sas.transfer.object"},{"method":"PUT","rel":"transferImportUpdate","href":"/dataFlows/steps/5239426e-1ce9-4351-a244-57645f321b79","uri":"/dataFlows/steps/5239426e-1ce9-4351-a244-57645f321b79","type":"application/vnd.sas.transfer.object","responseType":"application/vnd.sas.summary"}],"metadataVersion":0.0,"version":2,"type":"code","flowMetadata":{"inputPorts":[],"outputPorts":[]},"ui":"{\n\t\"syntaxversion\": \"1.2.0\",\n\t\"pages\": [\n\t\t{\n\t\t\t\"id\": \"page1\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"Control Options\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"infoText\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"This step enables you to call other flows as part of another flow.\\n\\nThe flow called by this step is executed asynchronsly, because of this fact the href for the state of that flow is written in the log - search for: Link to the flow state\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"context\",\n\t\t\t\t\t\"type\": \"dropdown\",\n\t\t\t\t\t\"label\": \"Select the context in which the flow should run\",\n\t\t\t\t\t\"items\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"SAS Studio compute context\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"placeholder\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"flowName\",\n\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\"label\": \"Enter the name of the flow you want to call\",\n\t\t\t\t\t\"placeholder\": \"Example Flow 1\",\n\t\t\t\t\t\"required\": true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"subsequentFlowCall\",\n\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\"label\": \"Name for the Subsequent Flow Call\",\n\t\t\t\t\t\"placeholder\": \"Subsequent Flow Batch\",\n\t\t\t\t\t\"required\": true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"description\",\n\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\"label\": \"Description of the Submission\",\n\t\t\t\t\t\"placeholder\": \"Flow submitted as part of the batch processing of flow XYZ\",\n\t\t\t\t\t\"required\": true\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"values\": {\n\t\t\"context\": {\n\t\t\t\"value\": \"SAS Studio compute context\"\n\t\t},\n\t\t\"flowName\": \"\",\n\t\t\"subsequentFlowCall\": \"\",\n\t\t\"description\": \"\"\n\t},\n\t\"showPageContentOnly\": false\n}","templates":{"SAS":"data _null_;\n\tcall symput('viyahost', substr(\"&_baseurl\", 1, prxmatch(\"\\/SASStudio/\\\", \"&_baseurl\") - 1));\nrun;\n\ndata _null_;\n\tcall symputx('name', strip(\"'\" || \"&flowName\" || \"'\"));\nrun;\n\n%put &=name;\n\n* The authentication is provided by SAS Studio - so there is no need for any of the authentication steps here;\nfilename flwNames temp;\nproc http\n    url = \"&viyahost./jobDefinitions/definitions\"\n    out= flwNames\n    oauth_bearer = sas_services\n    query = ('filter'=\"contains('name', &name.)\");\n    headers\n        'Accept'= 'application/vnd.sas.collection+json';\nrun;\n\nlibname flwNames json;\n\nproc sql noprint;\n\tselect id into: flowID\n\t\tfrom flwNames.items(obs=1);\nrun;\n\n%put &=flowID;\n\ndata _null_;\n\tlength total $32000.;\n\tname = '{\"name\":\"' || \"&subsequentFlowCall\" || '\",';\n\tdescription = '\"description\":\"' || \"&description\" || '\",';\n\tjobDefinitionURI = '\"jobDefinitionUri\": \"/jobDefinitions/definitions/' || \"&flowID\" || '\",';\n\targuments = '\"arguments\": {\"_contextName\": \"' || \"&context\" || '\"},';\n\tcreatedByApplication = '\"createdByApplication\": \"jobrequestui\"}';\n\ttotal = catx('', \"'\", name, description, jobDefinitionURI, arguments, createdByApplication, \"'\");\n\tcall symputx('inJSON', total);\nrun;\n\nfilename jobReq temp;\nproc http\n    url = \"&viyahost./jobExecution/jobRequests\"\n    out= jobReq\n\tin = &inJSON.\n\tmethod='post'\n\tct='application/vnd.sas.job.execution.job.request+json'\n    oauth_bearer = sas_services;\n    headers\n        'Accept'= 'application/vnd.sas.job.execution.job.request+json';\nrun;\n\nlibname jobReq json;\n\nproc sql noprint;\n\tselect value into :jrID\n\t\tfrom jobreq.alldata\n\t\t\twhere p1 = 'id';\nrun;\n\n%put &=jrID;\n\ndata _null_;\n\tset jobreq.alldata(where=(p1='id'));\n\tcall symput('jrURL', compress(\"&viyahost./jobExecution/jobRequests/&jrID./jobs\", ' '));\nrun;\n\n%put &=jrURL;\n\nfilename jobSub temp;\nproc http\n    url = \"&jrURL.\"\n    out= jobSub\n\tmethod='post'\n    oauth_bearer = sas_services;\n    headers\n        'Accept'= 'application/vnd.sas.job.execution.job+json';\nrun;\n\nlibname jobSub json;\n\ndata _null_;\n\tset jobSub.links(where=(rel='state'));\n\tput \"Link to the flow state:\";\n\tput href=;\nrun;"}}